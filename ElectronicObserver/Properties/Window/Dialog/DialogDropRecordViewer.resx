<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ItemNameToolTip" xml:space="preserve">
    <value>検索するアイテム名を指定します。
(ドロップ) はアイテムのドロップが発生した場合のみ抽出します。 </value>
  </data>
  <data name="ShipNameToolTip" xml:space="preserve">
    <value>検索する艦船名を指定します。
(ドロップ) は艦娘のドロップが発生した場合のみ抽出します。 </value>
  </data>
  <data name="EquipmentNameToolTip" xml:space="preserve">
    <value>検索する装備名を指定します。
(ドロップ) は装備のドロップが発生した場合のみ抽出します。 </value>
  </data>
  <data name="DateBeginToolTip" xml:space="preserve">
    <value>検索する日時の始点を指定します。</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>開始</value>
  </data>
  <data name="End" xml:space="preserve">
    <value>終了</value>
  </data>
  <data name="DateEndToolTip" xml:space="preserve">
    <value>検索する日時の終点を指定します。</value>
  </data>
  <data name="RankSToolTip" xml:space="preserve">
    <value>S勝利</value>
  </data>
  <data name="RankAToolTip" xml:space="preserve">
    <value>A勝利</value>
  </data>
  <data name="RankBToolTip" xml:space="preserve">
    <value>B勝利</value>
  </data>
  <data name="RankXToolTip" xml:space="preserve">
    <value>敗北</value>
  </data>
  <data name="NodeSelection" xml:space="preserve">
    <value>海域・セル</value>
  </data>
  <data name="MapDifficultyToolTip" xml:space="preserve">
    <value>難易度を指定します。
* はすべての難易度を抽出します。</value>
  </data>
  <data name="ButtonRun" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="RecordView_Name" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="RecordView_Date" xml:space="preserve">
    <value>日付</value>
  </data>
  <data name="RecordView_Map" xml:space="preserve">
    <value>海域</value>
  </data>
  <data name="RecordView_Rank" xml:space="preserve">
    <value>ランク</value>
  </data>
  <data name="RecordView_RankS" xml:space="preserve">
    <value>S勝利</value>
  </data>
  <data name="RecordView_RankA" xml:space="preserve">
    <value>A勝利</value>
  </data>
  <data name="RecordView_RankB" xml:space="preserve">
    <value>B勝利</value>
  </data>
  <data name="IsBossOnly" xml:space="preserve">
    <value>Boss</value>
  </data>
  <data name="MapAreaIDToolTip" xml:space="preserve">
    <value>海域IDを指定します。
* はすべての海域を抽出します。
</value>
  </data>
  <data name="MapInfoIDToolTip" xml:space="preserve">
    <value>海域IDを指定します。
* はすべての海域を抽出します。
</value>
  </data>
  <data name="MapCellIDToolTip" xml:space="preserve">
    <value>セルIDを指定します。
* はすべてのセルを抽出します。
</value>
  </data>
  <data name="MergeRows" xml:space="preserve">
    <value>まとめる</value>
  </data>
  <data name="MergeRowsToolTip" xml:space="preserve">
    <value>チェックすると同じドロップ項目をまとめて表示します。
</value>
  </data>
  <data name="LabelShipName" xml:space="preserve">
    <value>艦船</value>
  </data>
  <data name="LabelItemName" xml:space="preserve">
    <value>アイテム</value>
  </data>
  <data name="LabelEquipmentName" xml:space="preserve">
    <value>装備</value>
  </data>
  <data name="StatusInfo" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="statusStrip1" xml:space="preserve">
    <value>statusStrip1</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>ドロップ記録</value>
  </data>
  <data name="NameAny" xml:space="preserve">
    <value>(全て)</value>
  </data>
  <data name="NameNotExist" xml:space="preserve">
    <value>(なし)</value>
  </data>
  <data name="NameFullPort" xml:space="preserve">
    <value>(満員)</value>
  </data>
  <data name="NameExist" xml:space="preserve">
    <value>(ドロップ)</value>
  </data>
  <data name="Boss" xml:space="preserve">
    <value> [ボス]</value>
  </data>
  <data name="BattleHistoryNotFound" xml:space="preserve">
    <value>戦闘ログが見つかりませんでした。</value>
  </data>
  <data name="SearchingBattleHistory" xml:space="preserve">
    <value>戦闘ログを検索しています…</value>
  </data>
  <data name="OpenBattleHistory" xml:space="preserve">
    <value>戦闘ログ {0} を開きます。</value>
  </data>
  <data name="CouldNotOpenBattleHistory" xml:space="preserve">
    <value>戦闘ログを開けませんでした。</value>
  </data>
  <data name="SelectedItems" xml:space="preserve">
    <value>選択項目の合計: {0} / {1} ({2:p1})</value>
  </data>
  <data name="Today" xml:space="preserve">
    <value>今日</value>
  </data>
</root>