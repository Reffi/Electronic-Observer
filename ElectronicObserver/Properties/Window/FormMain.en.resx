<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Title" xml:space="preserve">
    <value>Electronic Observer</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>&amp;File</value>
  </data>
  <data name="UpdateAvailable" xml:space="preserve">
    <value>Electronic Observer v{0} is available!</value>
  </data>
  <data name="ExitConfirmation" xml:space="preserve">
    <value>Are you sure you want to exit?</value>
  </data>
  <data name="ConfirmatonCaption" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="LayoutLoaded" xml:space="preserve">
    <value>Successfully loaded window layout from {0}</value>
  </data>
  <data name="ShipDataNotLoaded" xml:space="preserve">
    <value>Ship data is not loaded.</value>
  </data>
  <data name="ErrorCaption" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="OpenEOWiki" xml:space="preserve">
    <value>This will open the EO wiki with your browser.
Are you sure?</value>
  </data>
  <data name="EquipmentDataNotLoaded" xml:space="preserve">
    <value>Equipment data is not loaded.</value>
  </data>
  <data name="HelpCaption" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="ReportIssue" xml:space="preserve">
    <value>This will open a page with your browser.
Are you sure?</value>
  </data>
  <data name="ReportIssueCaption" xml:space="preserve">
    <value>Report an issue</value>
  </data>
  <data name="FailedToOpenBrowser" xml:space="preserve">
    <value>Failed to open a browser</value>
  </data>
  <data name="OpenLayoutCaption" xml:space="preserve">
    <value>Open Layout File</value>
  </data>
  <data name="SaveLayoutCaption" xml:space="preserve">
    <value>Save Layout As</value>
  </data>
  <data name="File_Close" xml:space="preserve">
    <value>Close (&amp;X)</value>
  </data>
  <data name="File_Record" xml:space="preserve">
    <value>&amp;Record</value>
  </data>
  <data name="Debug" xml:space="preserve">
    <value>&amp;Debug</value>
  </data>
  <data name="Debug_DeleteOldAPI" xml:space="preserve">
    <value>&amp;Delete Old API Data</value>
  </data>
  <data name="Debug_LoadAPIFromFile" xml:space="preserve">
    <value>&amp;Load API From File...</value>
  </data>
  <data name="Debug_RenameShipResource" xml:space="preserve">
    <value>&amp;Rename Ship Resource...</value>
  </data>
  <data name="Debug_LoadDataFromOld" xml:space="preserve">
    <value>Load from Old api_start2(&amp;L)...</value>
  </data>
  <data name="File_Configuration" xml:space="preserve">
    <value>Settings (&amp;C)...</value>
  </data>
  <data name="File_Layout" xml:space="preserve">
    <value>&amp;Layout</value>
  </data>
  <data name="File_Layout_Change" xml:space="preserve">
    <value>Save &amp;as...</value>
  </data>
  <data name="File_Layout_Load" xml:space="preserve">
    <value>&amp;Load</value>
  </data>
  <data name="File_Layout_LockLayout" xml:space="preserve">
    <value>Lock layout (&amp;T)</value>
  </data>
  <data name="File_Layout_Open" xml:space="preserve">
    <value>&amp;Open...</value>
  </data>
  <data name="Debug_LoadInitialAPI" xml:space="preserve">
    <value>Load Initial API (&amp;I)...</value>
  </data>
  <data name="Debug_LoadRecordFromOld" xml:space="preserve">
    <value>Load Record from Old api_start2...</value>
  </data>
  <data name="File_Layout_Save" xml:space="preserve">
    <value>&amp;Save</value>
  </data>
  <data name="File_Layout_TopMost" xml:space="preserve">
    <value>Always On Top (&amp;M)</value>
  </data>
  <data name="File_Notification" xml:space="preserve">
    <value>&amp;Notifications</value>
  </data>
  <data name="File_Notification_MuteAll" xml:space="preserve">
    <value>&amp;Mute All Notifications</value>
  </data>
  <data name="File_Record_Load" xml:space="preserve">
    <value>&amp;Load</value>
  </data>
  <data name="File_Record_Save" xml:space="preserve">
    <value>&amp;Save</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>&amp;Help</value>
  </data>
  <data name="Help_Discord" xml:space="preserve">
    <value>Join Us on Discord</value>
  </data>
  <data name="Help_Help" xml:space="preserve">
    <value>View &amp;Help</value>
  </data>
  <data name="Help_Issue" xml:space="preserve">
    <value>Report a Problem...</value>
  </data>
  <data name="Help_Update" xml:space="preserve">
    <value>Check for Updates...</value>
  </data>
  <data name="Help_Version" xml:space="preserve">
    <value>About ElectronicObserver (&amp;V)</value>
  </data>
  <data name="Tool" xml:space="preserve">
    <value>&amp;Tools</value>
  </data>
  <data name="Tool_AlbumMasterEquipment" xml:space="preserve">
    <value>&amp;Equipment Encyclopedia</value>
  </data>
  <data name="Tool_AlbumMasterShip" xml:space="preserve">
    <value>&amp;Ship Encyclopedia</value>
  </data>
  <data name="Tool_AntiAirDefense" xml:space="preserve">
    <value>&amp;AA Defense</value>
  </data>
  <data name="Tool_BaseAirCorpsSimulation" xml:space="preserve">
    <value>LBAS Simulator (&amp;B)</value>
  </data>
  <data name="Tool_ConstructionRecord" xml:space="preserve">
    <value>Construction Record (&amp;R)</value>
  </data>
  <data name="Tool_DevelopmentRecord" xml:space="preserve">
    <value>Development Record (&amp;V)</value>
  </data>
  <data name="Tool_DropRecord" xml:space="preserve">
    <value>&amp;Drop Record</value>
  </data>
  <data name="Tool_EquipmentList" xml:space="preserve">
    <value>Equipment List (&amp;Q)</value>
  </data>
  <data name="Tool_ExpChecker" xml:space="preserve">
    <value>Exp Calculator (&amp;X)</value>
  </data>
  <data name="Tool_ExpeditionCheck" xml:space="preserve">
    <value>Expedition Check (&amp;M)</value>
  </data>
  <data name="Tool_ExtraBrowser" xml:space="preserve">
    <value>Extra Browser</value>
  </data>
  <data name="Tool_FleetImageGenerator" xml:space="preserve">
    <value>&amp;Fleet Image Generator</value>
  </data>
  <data name="Tool_KancolleProgress" xml:space="preserve">
    <value>Kancolle Progress</value>
  </data>
  <data name="Tool_ResourceChart" xml:space="preserve">
    <value>Resource &amp;Chart</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>&amp;View</value>
  </data>
  <data name="View_Arsenal" xml:space="preserve">
    <value>&amp;Arsenal</value>
  </data>
  <data name="View_BaseAirCorps" xml:space="preserve">
    <value>LBAS (&amp;S)</value>
  </data>
  <data name="View_Battle" xml:space="preserve">
    <value>&amp;Battle</value>
  </data>
  <data name="View_Browser" xml:space="preserve">
    <value>Browser (&amp;M)</value>
  </data>
  <data name="View_Compass" xml:space="preserve">
    <value>&amp;Compass</value>
  </data>
  <data name="View_Dock" xml:space="preserve">
    <value>&amp;Dock</value>
  </data>
  <data name="View_Fleet" xml:space="preserve">
    <value>&amp;Fleet</value>
  </data>
  <data name="View_Fleet_1" xml:space="preserve">
    <value>#&amp;1</value>
  </data>
  <data name="View_Fleet_2" xml:space="preserve">
    <value>#&amp;2</value>
  </data>
  <data name="View_Fleet_3" xml:space="preserve">
    <value>#&amp;3</value>
  </data>
  <data name="View_Fleet_4" xml:space="preserve">
    <value>#&amp;4</value>
  </data>
  <data name="View_FleetOverview" xml:space="preserve">
    <value>Fleet &amp;Overview</value>
  </data>
  <data name="View_FleetPreset" xml:space="preserve">
    <value>Fleet &amp;Presets</value>
  </data>
  <data name="View_Headquarters" xml:space="preserve">
    <value>&amp;HQ</value>
  </data>
  <data name="View_Information" xml:space="preserve">
    <value>&amp;Information</value>
  </data>
  <data name="View_Json" xml:space="preserve">
    <value>&amp;JSON</value>
  </data>
  <data name="View_Log" xml:space="preserve">
    <value>&amp;Log</value>
  </data>
  <data name="View_Quest" xml:space="preserve">
    <value>&amp;Quests</value>
  </data>
  <data name="View_ShipGroup" xml:space="preserve">
    <value>Ship &amp;Groups</value>
  </data>
  <data name="WindowCapture" xml:space="preserve">
    <value>&amp;Window Capture</value>
  </data>
  <data name="WindowCapture_AttachAll" xml:space="preserve">
    <value>Attach All (&amp;S)</value>
  </data>
  <data name="WindowCapture_DetachAll" xml:space="preserve">
    <value>Detach All (&amp;R)</value>
  </data>
  <data name="WindowCapture_SubWindow" xml:space="preserve">
    <value>Sub Window (&amp;C)</value>
  </data>
  <data name="Clock" xml:space="preserve">
    <value>Clock</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Now Preparing...</value>
  </data>
  <data name="Starting" xml:space="preserve">
    <value>Starting...</value>
  </data>
  <data name="EventStartsIn" xml:space="preserve">
    <value>Event starts in {0}</value>
  </data>
  <data name="EventHasStarted" xml:space="preserve">
    <value>Event has started!</value>
  </data>
  <data name="EventEndsIn" xml:space="preserve">
    <value>Event ends in {0}</value>
  </data>
  <data name="EventHasEnded" xml:space="preserve">
    <value>Event period has ended.</value>
  </data>
  <data name="MaintenanceStartsIn" xml:space="preserve">
    <value>Maintenance starts in {0}</value>
  </data>
  <data name="MaintenanceHasStarted" xml:space="preserve">
    <value>Maintenance has started.</value>
  </data>
  <data name="NextExerciseReset" xml:space="preserve">
    <value>Next PVP reset:</value>
  </data>
  <data name="NextQuestReset" xml:space="preserve">
    <value>Next quest reset:</value>
  </data>
  <data name="MissingPermissions" xml:space="preserve">
    <value>Your Windows user doesn't have permissions to create files in the current location. Please move the EO folder to a location where you have write access, for example, on your desktop.</value>
  </data>
  <data name="QuestDataNotLoaded" xml:space="preserve">
    <value>Quest data is not loaded.</value>
  </data>
  <data name="LayoutLoadFailedTitle" xml:space="preserve">
    <value>Layout loading failed</value>
  </data>
  <data name="LayoutLoadFailed" xml:space="preserve">
    <value>Please check if you have a valid layout file.
Version 5.0.0 has broken layouts, so layouts created before that will no longer work.
For more information or to get an existing layout, please see this github issue: https://github.com/ElectronicObserverEN/ElectronicObserver/issues/71

Do you want to open this github issue?</value>
  </data>
  <data name="CopyingToClipboardFailed" xml:space="preserve">
    <value>Copying to clipboard failed.</value>
  </data>
  <data name="Adjustment" xml:space="preserve">
    <value>Adjustment</value>
  </data>
  <data name="GridSplitterSize" xml:space="preserve">
    <value>Grid splitter size</value>
  </data>
  <data name="Old" xml:space="preserve">
    <value>Old</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
</root>