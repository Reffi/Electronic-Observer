<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActivationHint" xml:space="preserve">
    <value>表示時にダイアログをアクティブにします。
無効にすると操作を妨げない代わりにダイアログが隠れやすくなります。</value>
  </data>
  <data name="AlignBottom" xml:space="preserve">
    <value>下</value>
  </data>
  <data name="AlignBottomLeft" xml:space="preserve">
    <value>左下</value>
  </data>
  <data name="AlignBottomRight" xml:space="preserve">
    <value>右下</value>
  </data>
  <data name="AlignCenter" xml:space="preserve">
    <value>中央</value>
  </data>
  <data name="AlignHint" xml:space="preserve">
    <value>通知ダイアログの出現位置を設定します。</value>
  </data>
  <data name="AlignLeft" xml:space="preserve">
    <value>左</value>
  </data>
  <data name="AlignManualAbs" xml:space="preserve">
    <value>手動(絶対)</value>
  </data>
  <data name="AlignManualRel" xml:space="preserve">
    <value>手動(相対)</value>
  </data>
  <data name="Alignment" xml:space="preserve">
    <value>配置</value>
  </data>
  <data name="AlignRight" xml:space="preserve">
    <value>右</value>
  </data>
  <data name="AlignTop" xml:space="preserve">
    <value>上</value>
  </data>
  <data name="AlignTopLeft" xml:space="preserve">
    <value>左上</value>
  </data>
  <data name="AlignTopRight" xml:space="preserve">
    <value>右上</value>
  </data>
  <data name="AlignUnset" xml:space="preserve">
    <value>未指定</value>
  </data>
  <data name="AutoClose" xml:space="preserve">
    <value>自動で閉じる</value>
  </data>
  <data name="BackColorDispHint" xml:space="preserve">
    <value>通知ダイアログの背景色を指定します。
このラベルの■に色プレビューが表示されます。
</value>
  </data>
  <data name="BackColorDisplay" xml:space="preserve">
    <value>■背景色</value>
  </data>
  <data name="BackColorSelect" xml:space="preserve">
    <value>通知ダイアログの背景色を指定します。
左側のラベルの■に色プレビューが表示されます。
</value>
  </data>
  <data name="CloseOn" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="DamageOptions" xml:space="preserve">
    <value>大破警告</value>
  </data>
  <data name="DisplayMessage" xml:space="preserve">
    <value>メッセージを表示する</value>
  </data>
  <data name="DisplayMessageHint" xml:space="preserve">
    <value>ダイアログ内に通知テキストを描画するかを設定します。
画像のみで足りる場合は非表示にできます。</value>
  </data>
  <data name="DisplayWindowBorder" xml:space="preserve">
    <value>窓枠を表示する</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>有効にする</value>
  </data>
  <data name="EnableNotify" xml:space="preserve">
    <value>通知を有効にする</value>
  </data>
  <data name="FailedLoadImage" xml:space="preserve">
    <value>画像ファイルの読み込みに失敗しました。</value>
  </data>
  <data name="FailedLoadSound" xml:space="preserve">
    <value>音声ファイルの読み込みに失敗しました。</value>
  </data>
  <data name="ForeColorDispHint" xml:space="preserve">
    <value>通知ダイアログの文字色を指定します。
このラベルの■に色プレビューが表示されます。
</value>
  </data>
  <data name="ForeColorDisplay" xml:space="preserve">
    <value>■前景色</value>
  </data>
  <data name="ForeColorSelect" xml:space="preserve">
    <value>通知ダイアログの文字色を指定します。
左側のラベルの■に色プレビューが表示されます。</value>
  </data>
  <data name="HurryBy" xml:space="preserve">
    <value>通知を早める</value>
  </data>
  <data name="HurryHint" xml:space="preserve">
    <value>通知を早める秒数を指定します。
遠征・入渠を60秒早めるのがおすすめです。</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>通知画像</value>
  </data>
  <data name="IncludeDamecon" xml:space="preserve">
    <value>ダメコン装備艦を含める</value>
  </data>
  <data name="IncludeFlagship" xml:space="preserve">
    <value>旗艦を含める</value>
  </data>
  <data name="IncludeUnlocked" xml:space="preserve">
    <value>非ロック艦を含める</value>
  </data>
  <data name="IntervalHint" xml:space="preserve">
    <value>通知ダイアログを放置した時に自動で閉じるまでの時間を指定します。
0秒を指定した場合は時間経過では閉じません。</value>
  </data>
  <data name="LeftClick" xml:space="preserve">
    <value>左クリック</value>
  </data>
  <data name="LeftDoubleClick" xml:space="preserve">
    <value>左ダブルクリック</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>座標</value>
  </data>
  <data name="LocXHint" xml:space="preserve">
    <value>配置：手動設定時の出現座標を指定します。</value>
  </data>
  <data name="LocYHint" xml:space="preserve">
    <value>配置：手動設定時の出現座標を指定します。</value>
  </data>
  <data name="LvHint" xml:space="preserve">
    <value>通知する大破艦の最低Lvを指定します。
これよりLvの低い艦は通知されないので注意してください。</value>
  </data>
  <data name="MiddleClick" xml:space="preserve">
    <value>中クリック</value>
  </data>
  <data name="MiddleDoubleClick" xml:space="preserve">
    <value>中ダブルクリック</value>
  </data>
  <data name="MinLv" xml:space="preserve">
    <value>最低Lv</value>
  </data>
  <data name="MouseOver" xml:space="preserve">
    <value>マウスオーバー</value>
  </data>
  <data name="NotifyAfter" xml:space="preserve">
    <value>事後通知を有効にする</value>
  </data>
  <data name="NotifyAfterHint" xml:space="preserve">
    <value>大破進撃中に通知します。</value>
  </data>
  <data name="NotifyBefore" xml:space="preserve">
    <value>事前通知を有効にする</value>
  </data>
  <data name="NotifyBeforeHint" xml:space="preserve">
    <value>出撃前及び戦闘開始直後に通知します。</value>
  </data>
  <data name="NotifyDialog" xml:space="preserve">
    <value>通知ダイアログ</value>
  </data>
  <data name="NotifyDisplayError" xml:space="preserve">
    <value>通知システム: ダイアログボックスでの画像の描画に失敗しました。</value>
  </data>
  <data name="NotifyEndHint" xml:space="preserve">
    <value>マップの最終セルでも通知するかを指定します。</value>
  </data>
  <data name="NotifyEndNodes" xml:space="preserve">
    <value>終点でも通知する</value>
  </data>
  <data name="NotifyNow" xml:space="preserve">
    <value>事中通知を有効にする</value>
  </data>
  <data name="NotifyNowHint" xml:space="preserve">
    <value>出撃前及び戦闘終了時に通知します。</value>
  </data>
  <data name="OpenImage" xml:space="preserve">
    <value>画像ファイルを開く</value>
  </data>
  <data name="OpenSound" xml:space="preserve">
    <value>音声ファイルを開く</value>
  </data>
  <data name="RightClick" xml:space="preserve">
    <value>右クリック</value>
  </data>
  <data name="RightDoubleClick" xml:space="preserve">
    <value>右ダブルクリック</value>
  </data>
  <data name="Sec" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="ShowOnTop" xml:space="preserve">
    <value>最前面に表示する</value>
  </data>
  <data name="ShowWithActivation" xml:space="preserve">
    <value>表示時にアクティベートする</value>
  </data>
  <data name="Sound" xml:space="preserve">
    <value>通知音</value>
  </data>
  <data name="Test" xml:space="preserve">
    <value>テスト</value>
  </data>
  <data name="TestHint" xml:space="preserve">
    <value>通知のテスト再生を行います。
設定が適用・保存されるため注意してください。</value>
  </data>
  <data name="TestNotification" xml:space="preserve">
    <value>テスト 通知です。</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>通知の設定</value>
  </data>
  <data name="WindowBorderHint" xml:space="preserve">
    <value>通知ダイアログのウィンドウ枠を表示するかを指定できます。
画像のみで足りる場合は非表示にできます。</value>
  </data>
  <data name="SoundPathDirectorizeToolTip" xml:space="preserve">
    <value>パスのファイル名部分を削除し、フォルダ指定にします。
パスにフォルダを指定した場合、そのフォルダに含まれる音声ファイルがランダムに再生されます。</value>
  </data>
</root>