//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElectronicObserver.Window.Tools.AutoRefresh {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AutoRefresh {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AutoRefresh() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ElectronicObserver.Window.Tools.AutoRefresh.AutoRefresh", typeof(AutoRefresh).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 許可されたセル： .
        /// </summary>
        public static string AllowedCells {
            get {
                return ResourceManager.GetString("AllowedCells", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 有効.
        /// </summary>
        public static string Enabled {
            get {
                return ResourceManager.GetString("Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to セル削除.
        /// </summary>
        public static string RemoveCell {
            get {
                return ResourceManager.GetString("RemoveCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ルール削除.
        /// </summary>
        public static string RemoveRule {
            get {
                return ResourceManager.GetString("RemoveRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to シングルマップモード.
        /// </summary>
        public static string SingleMapMode {
            get {
                return ResourceManager.GetString("SingleMapMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to シングルマップモードが有効です。最初に有効化されたルールに設定されたマップにしか出撃できない： .
        /// </summary>
        public static string SingleMapModeIsEnabled {
            get {
                return ResourceManager.GetString("SingleMapModeIsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 有効にすると、最初に有効化されたルールに一致するマップにのみ出撃することができます。最初に有効化されたルールに一致しないすべてのマップとセルは、リフレッシュを引き起こします。無効の場合、ルールはそのルールが作られたマップにのみ適用されます。.
        /// </summary>
        public static string SingleMapModeToolTip {
            get {
                return ResourceManager.GetString("SingleMapModeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 自動リフレッシュ.
        /// </summary>
        public static string Title {
            get {
                return ResourceManager.GetString("Title", resourceCulture);
            }
        }
    }
}
